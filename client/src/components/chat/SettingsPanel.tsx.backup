import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Separator } from "@/components/ui/separator";
import { X, FileText, FileCode, Database, Download } from "lucide-react";
import { TTSToggle } from "@/components/TTSToggle";
import type { ChatMode, FocusMode } from "@shared/schema";

interface SettingsPanelProps {
  isOpen: boolean;
  onClose: () => void;
  mode: ChatMode;
  focus: FocusMode;
  onModeChange: (mode: ChatMode) => void;
  onFocusChange: (focus: FocusMode) => void;
  onExportChat: (format: 'txt' | 'md' | 'json') => void;
  ttsEnabled: boolean;
  onTTSToggle: (enabled: boolean) => void;
  stats?: {
    messagesSent: number;
    grammarImprovements: number;
    speakingTime: string;
  };
}

export function SettingsPanel({
  isOpen,
  onClose,
  mode,
  focus,
  onModeChange,
  onFocusChange,
  onExportChat,
  ttsEnabled,
  onTTSToggle,
  stats = {
    messagesSent: 0,
    grammarImprovements: 0,
    speakingTime: "0 min"
  }
}: SettingsPanelProps) {
  const [selectedLanguage, setSelectedLanguage] = useState("us");
  const [selectedLevel, setSelectedLevel] = useState("intermediate");

  return (
    <AnimatePresence>
      {isOpen && (
        <div className="fixed inset-0 z-[60] flex">
          {/* Backdrop */}
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="absolute inset-0 bg-black/50 backdrop-blur-sm"
            onClick={onClose}
          />
          
          {/* Panel */}
          <motion.div
            initial={{ x: "100%" }}
            animate={{ x: 0 }}
            exit={{ x: "100%" }}
            transition={{ type: "spring", damping: 20 }}
            className="ml-auto w-80 bg-white dark:bg-gray-900 shadow-2xl border-l border-gray-200 dark:border-gray-700 flex flex-col relative z-10 h-full"
          >
            {/* Header */}
            <div className="flex items-center justify-between p-4 border-b">
              <h2 className="text-lg font-semibold">Settings</h2>
              <Button
                variant="ghost"
                size="icon"
                onClick={onClose}
                className="h-8 w-8"
              >
                <X className="h-4 w-4" />
              </Button>
            </div>
            
            {/* Content */}
            <div className="flex-1 overflow-y-auto p-4 space-y-6">
              {/* Learning Progress */}
              <Card>
                <CardHeader>
                  <CardTitle className="text-base">Learning Progress</CardTitle>
                </CardHeader>
                <CardContent className="space-y-3">
                  <div className="flex items-center justify-between">
                    <span className="text-sm text-muted-foreground">Messages sent</span>
                    <span className="text-sm font-medium">{stats.messagesSent}</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm text-muted-foreground">Grammar improvements</span>
                    <span className="text-sm font-medium text-emerald-600">{stats.grammarImprovements}</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm text-muted-foreground">Speaking time</span>
                    <span className="text-sm font-medium text-blue-600">{stats.speakingTime}</span>
                  </div>
                </CardContent>
              </Card>

              {/* Chat Settings */}
              <Card>
                <CardHeader>
                  <CardTitle className="text-base">Chat Settings</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="space-y-2">
                    <label className="text-sm font-medium">Mode</label>
                    <Select value={mode} onValueChange={(value: ChatMode) => onModeChange(value)}>
                      <SelectTrigger>
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="conversation">Conversation</SelectItem>
                        <SelectItem value="interview">Interview</SelectItem>
                        <SelectItem value="roleplay">Roleplay</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                  
                  <div className="space-y-2">
                    <label className="text-sm font-medium">Focus</label>
                    <Select value={focus} onValueChange={(value: FocusMode) => onFocusChange(value)}>
                      <SelectTrigger>
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="fluency">Fluency</SelectItem>
                        <SelectItem value="correction">Correction</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                  
                  <Separator />
                  
                  {/* TTS Toggle */}
                  <div className="space-y-3">
                    <label className="text-sm font-medium">Voice Output</label>
                    <TTSToggle enabled={ttsEnabled} onToggle={onTTSToggle} />
                  </div>
                </CardContent>
              </Card>

              {/* Language Settings */}
              <Card>
                <CardHeader>
                  <CardTitle className="text-base">Language Settings</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="space-y-2">
                    <label className="text-sm font-medium">Accent Preference</label>
                    <Select value={selectedLanguage} onValueChange={setSelectedLanguage}>
                      <SelectTrigger>
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="us">American English</SelectItem>
                        <SelectItem value="uk">British English</SelectItem>
                        <SelectItem value="au">Australian English</SelectItem>
                        <SelectItem value="ca">Canadian English</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                  
                  <div className="space-y-2">
                    <label className="text-sm font-medium">Difficulty Level</label>
                    <Select value={selectedLevel} onValueChange={setSelectedLevel}>
                      <SelectTrigger>
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="beginner">Beginner</SelectItem>
                        <SelectItem value="intermediate">Intermediate</SelectItem>
                        <SelectItem value="advanced">Advanced</SelectItem>
                        <SelectItem value="native">Native-like</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                </CardContent>
              </Card>

              {/* Export Options */}
              <Card>
                <CardHeader>
                  <CardTitle className="text-base">Export Chat</CardTitle>
                </CardHeader>
                <CardContent className="space-y-2">
                  <Button
                    variant="outline"
                    className="w-full justify-start"
                    onClick={() => onExportChat('txt')}
                  >
                    <FileText className="h-4 w-4 mr-2" />
                    Export as Text (.txt)
                  </Button>
                  <Button
                    variant="outline"
                    className="w-full justify-start"
                    onClick={() => onExportChat('md')}
                  >
                    <FileCode className="h-4 w-4 mr-2" />
                    Export as Markdown (.md)
                  </Button>
                  <Button
                    variant="outline"
                    className="w-full justify-start"
                    onClick={() => onExportChat('json')}
                  >
                    <Database className="h-4 w-4 mr-2" />
                    Export as JSON (.json)
                  </Button>
                </CardContent>
              </Card>
            </div>
          </motion.div>
        </div>
      )}
    </AnimatePresence>
  );
}
